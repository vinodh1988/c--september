#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"}]}}

#!markdown

#### Method Overloading

##### many functions having same name

Difference in the functions should be made by using

 * Number of parameters
 * Type of the parameters
 * order of the parameters

#!csharp

static void Greet(){
      Console.WriteLine("Hello");
}

static void Greet(String name){
      Console.WriteLine($"Hello! {name}");
}

Greet();
Greet("Ravi");

#!csharp

static int Add(int a, int b){
    return a+b;
}

static int Add(int a, int b, int c){
    return a+b+c;
}

static float Add(float a,float b){
    return a+b;
}

static float Add(int a, float b){
    return a+b; // float+int --> float
}
 
static float Add(float a, int b){
    return a+b;
}

static string Add(string a , int b){
    return a+b;
}

Console.WriteLine(Add(1,2));
Console.WriteLine(Add(1,2,3));
Console.WriteLine(Add(1,34.34f));
Console.WriteLine(Add(34.34f,34));
Console.WriteLine(Add("India",1));

#!markdown

### Functions with default or optional parameters

#!csharp

static void PrintDetails(int sno,string name,string project="ERP Project"){
    Console.WriteLine($"sno: {sno} name: {name} project: {project}");
}

PrintDetails(1,"Rahul","API Project");
PrintDetails(2,"Rohan")

#!markdown

### Methods with default parameters

#!csharp

static void PrintDetails(string brand, string RAM="4 GB", int vcpu=2,double price=0.00){
    Console.WriteLine($"brand: {brand} RAM: {RAM} vcpu: {vcpu} price:{price}");
}

PrintDetails("Lenovo",price: 340000.34);
PrintDetails(price: 50404.43,brand: "Acer",vcpu: 8);

#!csharp

static int Sum(int[] n){
   int total=0;
   foreach(int x in n){
      total+=x;
   }
   return total;
}
int[] data={1,4,35,35,34};
Console.WriteLine(Sum(data));
Console.WriteLine(Sum(data[1..4]));

#!csharp

// Variable size parameters
static int Sum(params int[] n){
   int total=0;
   foreach(int x in n){
      total+=x;
   }
   return total;
}

Console.WriteLine(Sum(1,2));
Console.WriteLine(Sum(1,2,5));
Console.WriteLine(Sum(1,2,7,9));
Console.WriteLine(Sum(1,2,5,34,5,3));
